"""
–ë—ã—Å—Ç—Ä—ã–π end-to-end —Ç–µ—Å—Ç –¥–ª—è —Å–µ—Ä–≤–∏—Å–∞ –∏—Å—Ç–æ—Ä–∏–∏.

–ó–∞–ø—É—Å–∫ –∫–∞–∫ —Å–∫—Ä–∏–ø—Ç–∞:
    python test_history_api.py

–ó–∞–ø—É—Å–∫ –∫–∞–∫ pytest:
    pytest -q

–¢—Ä–µ–±—É–µ—Ç—Å—è: pip install httpx pytest pytest-asyncio
"""

import asyncio
import json
import os
import uuid

import httpx

BASE_URL = os.getenv("BASE_URL", "http://127.0.0.1:8000")


async def _happy_path(client: httpx.AsyncClient, user_id: str):
    messages = [
        {"role": "user", "content": "–ü—Ä–∏–≤–µ—Ç, –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç!", "type": "text"},
        {"role": "assistant", "content": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å —Å–µ–≥–æ–¥–Ω—è?", "type": "text"},

        # small-talk & preferences
        {"role": "user", "content": "–ö–∞–∫–æ–π —Å–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏?", "type": "text"},
        {"role": "assistant", "content": "–°–µ–≥–æ–¥–Ω—è –ø—è—Ç–Ω–∏—Ü–∞ ‚Äî –æ—Ç–ª–∏—á–Ω–æ–µ –≤—Ä–µ–º—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –≤—ã—Ö–æ–¥–Ω—ã–µ!", "type": "text"},

        {"role": "user", "content": "–ü–æ—Å–æ–≤–µ—Ç—É–π —Ñ–∏–ª—å–º –¥–ª—è —Å–µ–º–µ–π–Ω–æ–≥–æ –≤–µ—á–µ—Ä–∞.", "type": "text"},
        {"role": "assistant", "content": "–†–µ–∫–æ–º–µ–Ω–¥—É—é ¬´–ö–æ–∫–æ¬ª ‚Äî —Ç–µ–ø–ª–æ, –º—É–∑—ã–∫–∞–ª—å–Ω–æ –∏ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–µ—Ç—è–º.", "type": "text"},

        # weather
        {"role": "user", "content": "–ö–∞–∫–∞—è –±—É–¥–µ—Ç –ø–æ–≥–æ–¥–∞ –∑–∞–≤—Ç—Ä–∞?", "type": "text"},
        {"role": "assistant", "content": "–ü–æ –ø—Ä–æ–≥–Ω–æ–∑—É +23 ¬∞C, –±–µ–∑ –æ—Å–∞–¥–∫–æ–≤; –≤–µ—Ç–µ—Ä —Å–ª–∞–±—ã–π –∑–∞–ø–∞–¥–Ω—ã–π.", "type": "text"},

        # shopping
        {"role": "user", "content": "–ù–∞–π–¥–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫—Ä–æ—Å—Å–æ–≤–∫–∏ 42 —Ä–∞–∑–º–µ—Ä–∞ –¥–æ 80 ‚Ç¨.", "type": "text"},
        {"role": "assistant", "content": "–ù–∞—à—ë–ª Adidas RunFalcon 2.0 ‚Äî 74 ‚Ç¨. –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É?", "type": "text"},

        {"role": "user", "content": "–î–∞, –¥–æ–±–∞–≤—å –∏ –æ—Ñ–æ—Ä–º–∏ –¥–æ—Å—Ç–∞–≤–∫—É –Ω–∞ –∑–∞–≤—Ç—Ä–∞.", "type": "text"},
        {"role": "assistant", "content": "–ì–æ—Ç–æ–≤–æ: –¥–æ—Å—Ç–∞–≤–∫–∞ –∫—É—Ä—å–µ—Ä–æ–º –∫ 18:00 –∑–∞–≤—Ç—Ä–∞—à–Ω–µ–≥–æ –¥–Ω—è.", "type": "text"},

        # hobbies
        {"role": "user", "content": "–ù–∞–ø–æ–º–Ω–∏, —á—Ç–æ —è –ª—é–±–ª—é –∏–≥—Ä–∞—Ç—å –≤ –Ω–∞—Å—Ç–æ–ª—å–Ω—ã–π —Ç–µ–Ω–Ω–∏—Å.", "type": "text"},
        {"role": "assistant", "content": "–ó–∞–ø–æ–º–Ω–∏–ª–∞: –Ω–∞—Å—Ç–æ–ª—å–Ω—ã–π —Ç–µ–Ω–Ω–∏—Å ‚Äî –≤–∞—à–µ —Ö–æ–±–±–∏.", "type": "text"},

        # travel
        {"role": "user", "content": "–ö–∞–∫–∏–µ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –µ—Å—Ç—å –≤ –ü—Ä–∞–≥–µ?", "type": "text"},
        {"role": "assistant", "content": "–ö–∞—Ä–ª–æ–≤ –º–æ—Å—Ç, –ü—Ä–∞–∂—Å–∫–∏–π –ì—Ä–∞–¥ –∏ –°—Ç–∞—Ä–æ–º–µ—Å—Ç—Å–∫–∞—è –ø–ª–æ—â–∞–¥—å.", "type": "text"},

        # follow-up
        {"role": "user", "content": "–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –≤—Ö–æ–¥ –≤ —Å–æ–±–æ—Ä –°–≤—è—Ç–æ–≥–æ –í–∏—Ç–∞?", "type": "text"},
        {"role": "assistant", "content": "–ü–æ–ª–Ω—ã–π –±–∏–ª–µ—Ç ‚Äî 350 CZK (‚âà14 ‚Ç¨), –¥–µ—Ç—Å–∫–∏–π ‚Äî 200 CZK.", "type": "text"},

        # emotions
        {"role": "user", "content": "–Ø —Å–µ–≥–æ–¥–Ω—è —É—Å—Ç–∞–ª –∏ –Ω–µ–º–Ω–æ–≥–æ —Ä–∞—Å—Å—Ç—Ä–æ–µ–Ω.", "type": "text"},
        {"role": "assistant", "content": "–°–æ—á—É–≤—Å—Ç–≤—É—é. –ú–æ–∂–µ—Ç, —Å–¥–µ–ª–∞—Ç—å –ø–∞—É–∑—É –∏ –ø—Ä–æ–π—Ç–∏—Å—å –Ω–∞ —Å–≤–µ–∂–µ–º –≤–æ–∑–¥—É—Ö–µ?",
         "type": "text"},

        # cooking
        {"role": "user", "content": "–î–∞–π –±—ã—Å—Ç—Ä—ã–π —Ä–µ—Ü–µ–ø—Ç –ø–∞—Å—Ç—ã –∫–∞—Ä–±–æ–Ω–∞—Ä–∞.", "type": "text"},
        {"role": "assistant", "content": "–°–ø–∞–≥–µ—Ç—Ç–∏, —è–π—Ü–∞, –ø–∞—Ä–º–µ–∑–∞–Ω –∏ –≥—É–∞–Ω—á–∞–ª–µ: 8 –º–∏–Ω –≤–∞—Ä–∫–∏ + 2 –º–∏–Ω —Å–æ—É—Å.",
         "type": "text"},

        # dates & reminders
        {"role": "user", "content": "–ó–∞–≤—Ç—Ä–∞ –¥–µ–¥–ª–∞–π–Ω –ø–æ –æ—Ç—á—ë—Ç—É, –Ω–µ –¥–∞–π –∑–∞–±—ã—Ç—å!", "type": "text"},
        {"role": "assistant", "content": "–ü–æ—Å—Ç–∞–≤–∏–ª–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –Ω–∞ 9:00: ¬´–°–¥–∞—Ç—å –æ—Ç—á—ë—Ç¬ª.", "type": "text"},

        # music
        {"role": "user", "content": "–í–∫–ª—é—á–∏ —Ä–∞—Å—Å–ª–∞–±–ª—è—é—â—É—é –ø–ª–µ–π–ª–∏—Å—Ç-–¥–∂–∞–∑.", "type": "text"},
        {"role": "assistant", "content": "–ó–∞–ø—É—Å–∫–∞—é –ø–ª–µ–π–ª–∏—Å—Ç ¬´Jazz Chill¬ª –≤ Spotify.", "type": "text"},

        # learning
        {"role": "user", "content": "–ö–∞–∫ –±—ã—Å—Ç—Ä–æ –≤—ã—É—á–∏—Ç—å 20 –∞–Ω–≥–ª–∏–π—Å–∫–∏—Ö —Å–ª–æ–≤?", "type": "text"},
        {"role": "assistant", "content": "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ—Ç–æ–¥ ¬´5-5-5¬ª: 5 —Å–ª–æ–≤ ‚Äî 5 –ø–æ–≤—Ç–æ—Ä–æ–≤ ‚Äî 5 –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–≤.",
         "type": "text"},

        # sports score
        {"role": "user", "content": "–ö—Ç–æ –≤—ã–∏–≥—Ä–∞–ª –≤—á–µ—Ä–∞—à–Ω–∏–π –º–∞—Ç—á –†–µ–∞–ª-–ë–∞—Ä—Å–∞?", "type": "text"},
        {"role": "assistant", "content": "–ë–∞—Ä—Å–µ–ª–æ–Ω–∞ –ø–æ–±–µ–¥–∏–ª–∞ 2:1, –≥–æ–ª—ã ‚Äî –õ–µ–≤–∞–Ω–¥–æ–≤—Å–∫–∏ –∏ –§–∞—Ç–∏.", "type": "text"},

        # personal data
        {"role": "user", "content": "–ó–∞–ø–æ–º–Ω–∏: –º–æ—ë –∏–º—è –î–µ–Ω–∏—Å.", "type": "text"},
        {"role": "assistant", "content": "–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, –î–µ–Ω–∏—Å!", "type": "text"},

        # follow-up question using memory
        {"role": "assistant", "content": "–î–µ–Ω–∏—Å, —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã–µ –¥–ª—è —Ç–µ–Ω–Ω–∏—Å–∞?", "type": "text"},
        {"role": "user", "content": "–î–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞!", "type": "text"},

        # ending
        {"role": "assistant", "content": "–°—É–±–±–æ—Ç–∞ +25 ¬∞C, –±–µ–∑ –≤–µ—Ç—Ä–∞ ‚Äî –∏–¥–µ–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è –∏–≥—Ä—ã!", "type": "text"},
        {"role": "user", "content": "–°–ø–∞—Å–∏–±–æ, —Ç—ã –ª—É—á—à–∏–π!", "type": "text"},
        {"role": "assistant", "content": "–†–∞–¥–∞ –ø–æ–º–æ—á—å üòä", "type": "text"}
    ]

    resp = await client.post("/add", json={"uuid": user_id, "messages": messages})
    resp.raise_for_status()
    assert resp.json()["stream_ids"], "–°–µ—Ä–≤–µ—Ä –Ω–µ –≤–µ—Ä–Ω—É–ª id —Å–æ–æ–±—â–µ–Ω–∏–π"

    # 2) —á–∏—Ç–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
    resp = await client.get("/history", params={"uuid": user_id, "limit": 10})
    resp.raise_for_status()
    history = resp.json()["messages"]

"""
    # 3) –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º summary
    resp = await client.post("/summary", params={"uuid": user_id})
    resp.raise_for_status()
    summary = resp.json()["summary"]
    print("Summary:", summary)
    assert summary, "–ü—É—Å—Ç–∞—è —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏—è"
"""

async def main():
    async with httpx.AsyncClient(base_url=BASE_URL, timeout=10.0) as client:
        await _happy_path(client, str(12333))


if __name__ == "__main__":
    asyncio.run(main())

